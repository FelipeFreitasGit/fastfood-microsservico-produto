name: Pipeline DEPLOY

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{secrets.AWS_DEFAULT_REGION}}                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: ${{secrets.ECR_REPOSITORY}}                   # set this to your Amazon ECR repository name

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      - name: Package
        run: ./gradlew clean build -x test
      
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      - name: Package
        run: ./gradlew test

  deploy:
    needs: test
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Package
        run: ./gradlew clean build -x test

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .          
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG